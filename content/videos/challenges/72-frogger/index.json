{
  "title": "Frogger",
  "description": "In this multi-part challenge, I create a simplified version of the classic Atari video game Frogger in Processing (Java).",
  "videoNumber": "72",
  "date": "2017-06-14",
  "languages": ["Processing"],
  "topics": ["game mechanics", "Atari Frogger game", "inheritance"],
  "canContribute": true,
  "relatedChallenges": ["3-snake-game", "46-asteroids", "67-pong", "71-minesweeper", "91-snakes-and-ladders", "115-snake-game-redux"],
  "timestamps": [],
  "parts": [
    {
      "title": "Part 1 - Creating the Frog",
      "videoId": "giXV6xErw0Y",
      "timestamps": [
        {
          "time": "0:00",
          "title": "Introducing today's topic: the classic arcade game Frogger"
        },
        { "time": "1:43", "title": "What do we need to program Frogger?" },
        { "time": "4:07", "title": "Make a Rectangle class" },
        {
          "time": "5:36",
          "title": "Write a function that tests whether two rectangles are intersecting"
        },
        {
          "time": "9:34",
          "title": "Use inheritance to make a frog object that extends the Rectangle class"
        },
        {
          "time": "11:29",
          "title": "Use the \"super\" key word to initialize the inherited values"
        },
        { "time": "15:54", "title": "Write a function to move the frog" },
        { "time": "22:41", "title": "Conclusion and next steps" }
      ]
    },
    {
      "title": "Part 2 - Adding Cars",
      "videoId": "06-ZvYmSeus",
      "timestamps": [
        { "time": "0:00", "title": "Start of Part 2" },
        { "time": "2:41", "title": "Add speed to the car class" },
        { "time": "4:27", "title": "Add multiple cars" },
        {
          "time": "11:48",
          "title": "Check to see whether the frog and car intersect"
        },
        { "time": "13:22", "title": "Add a reset function" },
        { "time": "14:36", "title": "Conclusion and next steps" }
      ]
    },
    {
      "title": "Part 3 - Adding Logs and Safety Lanes",
      "videoId": "hk326ZHlENQ",
      "timestamps": [
        { "time": "0:00", "title": "Start of Part 3" },
        { "time": "0:56", "title": "Have cars move in both directions" },
        { "time": "2:40", "title": "Add a safety lane" },
        {
          "time": "3:28",
          "title": "Add a Log class that extends the Car class"
        },
        { "time": "10:22", "title": "Check if the frog is on a log" },
        {
          "time": "11:53",
          "title": "Attach the frog to the log when the frog intersects the log"
        },
        { "time": "17:08", "title": "Add the ability to detach frog from log" },
        { "time": "19:53", "title": "Constrain the frog to the window" },
        { "time": "23:00", "title": "Conclusion and suggesions for variations" }
      ]
    },
    {
      "title": "Part 4 - Refactoring the code",
      "videoId": "c6WdJltqEtM",
      "timestamps": [
        { "time": "0:00", "title": "Today's objective: refactor the code" },
        { "time": "3:15", "title": "Create a Lane class" },
        { "time": "4:15", "title": "Rename logs and cars as Obstacles" },
        { "time": "6:56", "title": "Make an array of lanes" },
        {
          "time": "22:35",
          "title": "Use constructor overloading to add color to the lane "
        },
        { "time": "24:30", "title": "Add game play back" },
        {
          "time": "26:03",
          "title": "Use type to indicate whether an obstacle is a car or log"
        },
        { "time": "28:43", "title": "Use type to refactor the check function" },
        { "time": "31:44", "title": "Detach the frog when it moves" },
        {
          "time": "32:32",
          "title": "Use the lane index to register which lane the frog is in"
        },
        { "time": "35:23", "title": "Conclusion and ways to contribute" }
      ]
    }
  ],
  "codeExamples": [
    {
      "title": "Frogger",
      "description": "This sketch creates a simple version of the Frogger arcade game.",
      "image": "img1.jpg",
      "urls": {
        "p5": "https://editor.p5js.org/codingtrain/sketches/crMMFw8vD",
        "processing": "https://github.com/CodingTrain/Coding-Challenges/tree/main/072_Frogger/Processing/CC_072_Frogger_original"
      }
    },
    {
      "title": "Frogger - Refactored",
      "description": "The refactored code for the Frogger game.  The p5.js sketch is from the Frogger repo.",
      "urls": {
        "p5": "https://editor.p5js.org/codingtrain/sketches/C8gqXQ3Qd",
        "processing": "https://github.com/CodingTrain/Coding-Challenges/tree/main/072_Frogger/Processing/CC_072_Frogger_refactored",
        "other": "https://github.com/CodingTrain/Frogger"
      }
    }
  ],
  "groupLinks": [
    {
      "title": "References",
      "links": [
        {
          "icon": "üåê",
          "title": "Frogger on Wikipedia",
          "url": "https://en.wikipedia.org/wiki/Frogger",
          "description": "Wikipedia page with information and resources about the arcade game Frogger."
        }
      ]
    },
    {
      "title": "Videos",
      "links": [
        {
          "icon": "üé•",
          "title": "Video of the Gameplay",
          "url": "https://youtu.be/l9eTOaNFwKQ",
          "description": "Video about the arcade game Frogger."
        },
        {
          "icon": "üé•",
          "title": "Overloading",
          "url": "https://youtu.be/V7k5bFQbhG0",
          "description": "This video covers the following topics: objects as data for other objects, overloading, and objects communicating with other objects."
        },
        {
          "icon": "üé•",
          "title": "Video Games track",
          "url": "/tracks/games",
          "description": "This side track is a collection of coding challenges for various (classic and new) video games in Processing (Java) or JavaScript with p5.js."
        },
        {
          "icon": "üî¥",
          "title": "Coding Train Live 96",
          "url": "https://youtu.be/7BdfPG3peP4?t=1547s",
          "description": "Live Stream with Frogger"
        },
        {
          "icon": "üî¥",
          "title": "Coding Train Live 97",
          "url": "https://youtu.be/m9EsKBPCggk?t=4350s",
          "description": "Live Stream with Perceptron Follow-up and Frogger Refactoring"
        }
      ]
    }
  ],
  "credits": [
    { "title": "Editing", "name": "Mathieu Blanchette" },
    { "title": "Animations", "name": "Jason Heglund" }
  ]
}
