{
  "title": "Quadtree",
  "description": "In this multi-part coding challenge, I implement a Quadtree data structure in JavaScript and visualize it with p5.js.",
  "videoNumber": "98",
  "date": "2018-03-26",
  "languages": ["JavaScript", "p5.js"],
  "topics": ["quadtree data structure", "quadtree collision detection"],
  "canContribute": true,
  "relatedChallenges": ["65-binary-tree", "68-breadth-first-search", "72-frogger"],
  "timestamps": [],
  "parts": [
    {
      "title": "Part 1 - Creating the Quadtree",
      "videoId": "OJxEcs0w_kE",
      "timestamps": [
        { "time": "0:00", "title": "Introducing today's topic: Quadtrees" },
        { "time": "1:34", "title": "N squared problem" },
        { "time": "4:30", "title": "Big O notation" },
        { "time": "8:23", "title": "QuadTree class" },
        { "time": "11:15", "title": "Capacity" },
        { "time": "12:26", "title": "Insert points" },
        { "time": "13:30", "title": "Create a subdivide function" },
        { "time": "20:11", "title": "Recursively add points" },
        { "time": "21:12", "title": "Check if point is within boundary" },
        { "time": "26:49", "title": "Visualize the Quadtree" },
        { "time": "30:30", "title": "Use mouse clicks to add points" },
        { "time": "32:43", "title": "Edge cases" }
      ]
    },
    {
      "title": "Part 2 - Querying the Quadtree for Points",
      "videoId": "QQx_NmCIuCY",
      "timestamps": [
        {
          "time": "0:00",
          "title": "Quadtree Part 2 - Query the data structure for points contained within a rectangular boundary"
        },
        {
          "time": "1:45",
          "title": "Write a query function to get all the points within a rectangle"
        },
        { "time": "3:16", "title": "Write an intersection function" },
        { "time": "6:14", "title": "Create an array of \"found\" points" },
        { "time": "13:00", "title": "Draw points within the rectangle" },
        {
          "time": "15:21",
          "title": "Sanity check--how many points are being counted"
        },
        { "time": "16:57", "title": "Adjust the rectangle with the mouse" },
        { "time": "18:44", "title": "Return the points array" },
        {
          "time": "19:42",
          "title": "Up next: apply the quadtrees algorithm to a collision detection problem"
        }
      ]
    },
    {
      "title": "Part 3 - Applying the Quadtree to Particle System Collisions",
      "videoId": "z0YFFg_nBjw",
      "timestamps": [
        {
          "time": "0:00",
          "title": "Quadtree Part 3 - Apply the algorithm to particle system collisions"
        },
        { "time": "1:05", "title": "Start with a Particle class" },
        { "time": "2:29", "title": "Add particle checking" },
        { "time": "6:00", "title": "Add the quadtree" },
        {
          "time": "9:01",
          "title": "Add userdata property to the point object"
        },
        { "time": "10:39", "title": "Re-create quadtree object every frame" },
        { "time": "12:52", "title": "Query a circular range" },
        { "time": "17:00", "title": "Conclusion and suggested variations" }
      ]
    }
  ],
  "codeExamples": [
    {
      "title": "Quadtree - Parts 1 & 2",
      "description": "This sketch implements a quadtree structure.",
      "urls": {
        "p5": "https://editor.p5js.org/codingtrain/sketches/g7LnWQ42x",
        "processing": "https://github.com/CodingTrain/Coding-Challenges/tree/main/098.1_QuadTree/Processing/CC_098.1_QuadTree"
      }
    },
    {
      "title": "Quadtree - Part 3",
      "description": "This sketch applies the quadtree algorithm to particle system collisions.",
      "image": "img1.jpg",
      "urls": {
        "p5": "https://editor.p5js.org/codingtrain/sketches/CDMjU0GIK",
        "processing": "https://github.com/CodingTrain/Coding-Challenges/tree/main/098.3_QuadTree_Collisions/Processing/CC_098.3_QuadTree_Collisions"
      }
    }
  ],
  "groupLinks": [
    {
      "title": "References",
      "links": [
        {
          "icon": "ðŸ’¾",
          "title": "Quadtree repo",
          "url": "https://github.com/CodingTrain/QuadTree",
          "description": "Github repo with quadtree code."
        },
        {
          "icon": "ðŸ—„",
          "title": "Quadtree on Wikipedia",
          "url": "https://en.wikipedia.org/wiki/Quadtree",
          "description": "Webpage with information and resources about Quadtrees."
        }
      ]
    },
    {
      "title": "Live Stream Archives",
      "links": [
        {
          "icon": "ðŸ”´",
          "title": "Live Stream #128",
          "url": "https://youtu.be/MxnqJGwu2cc?t=1242s",
          "description": "Quadtree Live Stream"
        },
        {
          "icon": "ðŸ”´",
          "title": "Live Stream #130",
          "url": "https://youtu.be/w1Np5meK4_Q?t=5122s",
          "description": "Live Stream with Color Predictor and Quadtree Continued"
        }
      ]
    }
  ],
  "credits": [
    {
      "title": "Editing",
      "name": "Mathieu Blanchette"
    },
    {
      "title": "Animations",
      "name": "Jason Heglund"
    }
  ]
}
